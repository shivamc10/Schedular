// This file was automatically generated from jsontable-settings-panel.soy.
// Please don't edit this file by hand.

/**
 * @fileoverview Templates in namespace org.swift.confluence.table.jsontable.editor.
 */

if (typeof org == 'undefined') { var org = {}; }
if (typeof org.swift == 'undefined') { org.swift = {}; }
if (typeof org.swift.confluence == 'undefined') { org.swift.confluence = {}; }
if (typeof org.swift.confluence.table == 'undefined') { org.swift.confluence.table = {}; }
if (typeof org.swift.confluence.table.jsontable == 'undefined') { org.swift.confluence.table.jsontable = {}; }
if (typeof org.swift.confluence.table.jsontable.editor == 'undefined') { org.swift.confluence.table.jsontable.editor = {}; }


org.swift.confluence.table.jsontable.editor.jsontableSettingsPanel = function(opt_data, opt_ignored) {
  opt_data = opt_data || {};
  return '<div class="aui-tabs horizontal-tabs"><ul class="tabs-menu"><li class="menu-item active-tab"><a href="#data-source">Data source</a></li><li class="menu-item"><a href="#data-format">Data format</a></li><li class="menu-item"><a href="#data-settings">Data settings</a></li></ul><div class="tabs-pane active-pane" id="data-source"><div class="scrollable-tab-content"><fieldset>' + org.swift.confluence.table.editor.dataLocationFields(opt_data) + org.swift.confluence.table.editor.textElement({name: 'encoding', value: opt_data.encoding, label: 'File encoding', topLabel: 'true', helpContent: 'Specify encoding if different than Confluence default. For example, Windows-1252 or UTF-8. See \x3ca href\x3d\x22https://en.wikipedia.org/wiki/Character_encoding\x22 target\x3d\x22_blank\x22\x3eCharacter encoding\x3c/a\x3e for more information. '}) + org.swift.confluence.table.editor.macroBodyFilledMessage(opt_data) + '</fieldset></div></div><!-- tabs-pane data-source close--><div class="tabs-pane" id="data-format"><div class="scrollable-tab-content"><fieldset><h3>Parsing</h3>' + org.swift.confluence.table.editor.textElement({name: 'paths', value: opt_data.paths, label: 'Paths to fields', topLabel: 'true', helpContent: 'Normally, specify a single path to generate a single table. Simple form is a dot separated list of field names to reach the specific field within the JSON string. See the \x3ca href\x3d\x22https://bobswift.atlassian.net/wiki/x/tIAXB\x22 target\x3d\x22_blank\x22\x3edocumentation\x3c/a\x3e for more advanced support.'}) + org.swift.confluence.table.editor.textElement({name: 'fieldPaths', value: opt_data.fieldPaths, label: 'Paths to fields to be included', topLabel: 'true', helpContent: 'Comma separated list of paths to fields to be included in the output. Paths are relative to the JSON field specified in the paths parameter.  Defaults to all fields. '}) + org.swift.confluence.table.editor.textElement({name: 'fieldOrderRegexPatterns', value: opt_data.fieldOrderRegexPatterns, label: 'Regex patterns for ordering fields', topLabel: 'true', helpContent: 'Only used when defaulting to all fields and field order is important. Comma separated list of regular expression patterns. A field found by an earlier pattern is ordered before fields not found or found by a later pattern.'}) + org.swift.confluence.table.editor.textElement({name: 'sortPaths', value: opt_data.sortPaths, label: 'Paths used to determine sort order', topLabel: 'true', helpContent: 'Comma separated list of paths. Paths are relative to the JSON field specified in the paths parameter. If specified, JSON array elements will be sorted based on the comparison of field values represented by the paths.'}) + '</fieldset><fieldset><h3>Augmentation</h3>' + org.swift.confluence.table.editor.textElement({name: 'augments', value: opt_data.augments, label: 'Augments to data row values', topLabel: 'true', helpContent: 'Comma separated list of augments to the data row values, one for each column. Double quote values containing a comma. See the \x3ca href\x3d\x22https://bobswift.atlassian.net/wiki/x/ooCSAg\x22 target\x3d\x22_blank\x22\x3edocumentation\x3c/a\x3e.'}) + org.swift.confluence.table.editor.textElement({name: 'headingAugments', value: opt_data.headingAugments, label: 'Augments to heading row values', topLabel: 'true', helpContent: 'Comma separated list of augments to heading row values, one for each column.'}) + org.swift.confluence.table.editor.textElement({name: 'footingAugments', value: opt_data.footingAugments, label: 'Augments to footer row values', topLabel: 'true', helpContent: 'Comma separated list of augments to footing row values, one for each column.'}) + '</fieldset></div></div><!-- tabs-pane data-format close--><div class="tabs-pane" id="data-settings"><div class="scrollable-tab-content"><fieldset>' + org.swift.confluence.table.editor.textElement({name: 'columns', value: opt_data.columns, label: 'Columns to display', topLabel: 'true', helpContent: 'Comma separated list of column names or numbers in any order. Default is to show all columns.'}) + org.swift.confluence.table.editor.customToggleElement({name: 'output', value1: 'html', value2: 'wiki', value: opt_data.output, label: 'Output format'}) + org.swift.confluence.table.editor.toggleElement({name: 'stripQualifiers', value: opt_data.stripQualifiers, label: 'Strip leading qualifiers from generated headings'}) + org.swift.confluence.table.editor.toggleElement({name: 'capitalize', value: opt_data.capitalize, label: 'Capitalize first character of generated headings'}) + org.swift.confluence.table.editor.toggleElement({name: 'showWiki', value: opt_data.showWiki, label: 'Show non-formatted version of generated wiki'}) + org.swift.confluence.table.editor.toggleElement({name: 'escape', value: opt_data.escape, label: 'Escape special characters in wiki'}) + org.swift.confluence.table.editor.toggleElement({name: 'macros', value: opt_data.macros, label: 'Render wiki markup macros in body'}) + org.swift.confluence.table.editor.toggleElement({name: 'disableAntiXss', value: opt_data.disableAntiXss, label: 'Stop encoding of html characters in table content', helpContent: 'Enable this parameter for tables that use html output and have html content, such as links. HTML content will only display correctly if this parameter is enabled.'}) + '</fieldset></div></div><!-- tabs-pane data-settings close--></div>';
};
if (goog.DEBUG) {
  org.swift.confluence.table.jsontable.editor.jsontableSettingsPanel.soyTemplateName = 'org.swift.confluence.table.jsontable.editor.jsontableSettingsPanel';
}
